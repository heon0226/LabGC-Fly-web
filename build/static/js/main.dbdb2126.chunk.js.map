{"version":3,"sources":["components/Layout.jsx","components/Fieldset.jsx","Styles.jsx","components/main/Connection.jsx","components/main/Progress.jsx","components/main/Graph.jsx","components/main/Device.jsx","components/main/FilterForm.jsx","API.jsx","components/main/ProtocolList.jsx","components/main/ResultTable.jsx","pages/Main.jsx","components/setup/ProtocolList.jsx","components/setup/HistoryModal.jsx","components/setup/HistoryList.jsx","pages/Setup.jsx","components/editor/Textarea.jsx","components/editor/FilterForm.jsx","pages/Editor.jsx","components/Card.jsx","components/protocol/CommandRun.jsx","components/protocol/ProtocolRun.jsx","pages/Protocol.jsx","components/stepper/StepperState.jsx","components/stepper/StepperHome.jsx","components/stepper/StepperJog.jsx","components/stepper/StepperPosition.jsx","components/stepper/Registers.jsx","pages/Chamber.jsx","pages/Syringe.jsx","pages/Filter.jsx","pages/Magnet.jsx","components/Navigation.js","index.jsx"],"names":["style","width","border","display","margin","padding","flexDirection","justifyContent","backgroundColor","Layout","props","React","createElement","Container","className","children","styles","fieldset","minHeight","legend","marginLeft","fontSize","Fieldset","title","LABEL","fontFamily","LABEL_BORDERD","minWidth","textAlign","RESULT_TABLE","tableLayout","RESULT_TABLE_ITEM","emptyCells","RESULT_TABLE_ITEM_WHITH","BUTTON","outlineColor","FILTER_IMAGE","HISTORY_TABLE","height","overflowY","HISTORY_TBODY","LAYOUT_GRAPH","showLegend","xaxis","rangemode","yaxis","range","LAYOUT_TEMP","HISTORY_PLOT","PLOT","Connection","Col","Row","serialNumber","isConnected","Progress","protocolName","state","remainingTotalSec","Plot","createPlotlyComponent","Plotly","GRAPH","CONFIG","responsive","displaylogo","scrollZoom","staticPlot","displayModeBar","FILTERS","COLORS","Graph","layout","config","data","photodiodes","graphData","displayFilters","forEach","isDisplay","index","push","name","x","length","y","type","line","color","drawGraphData","Device","temperature","FilterForm","md","xs","src","isShow","filter","getFilterImage","id","onClick","displayHandler","disabled","resultCt","API_URL","require","PROTOCOL_LIST","MAGNETO_RUN","post","command","callback","arguments","undefined","fetch","method","headers","body","then","response","json","result","alert","reason","usePost","SELECT","OPTION","ProtocolList","_useState","useState","_useState2","_slicedToArray","protocols","setProtocols","selectProtocol","toString","useEffect","as","onChange","event","target","value","map","protocol","key","selected","ResultTable","tableItems","results","filterNames","filterName","tableItem","Main","history","useHistory","setConnected","_useState3","_useState4","setSerialNumber","_useState5","_useState6","filters","setFilters","_useState7","_useState8","setFilterCts","_useState9","_useState10","setFilterNames","_useState11","_useState12","setDisplayFilters","_useState13","_useState14","setResults","_useState15","_useState16","resultCts","setResultCts","_useState17","_useState18","setProtocolName","_useState19","_useState20","_useState21","_useState22","setMagnetoProtocols","_useState23","_useState24","setPhotodiodes","_useState25","_useState26","setTemperature","_useState27","_useState28","setState","_useState29","_useState30","running","setRunning","_useState31","_useState32","setRemainSec","_useState33","_useState34","setRemainingTotalSec","_useState35","_useState36","setElapsedTime","_useState37","_useState38","setRemainingGotoCount","_useState39","_useState40","setTotalActionNumber","_useState41","_useState42","setCurrentActionNumber","targetIndex","updatePcrStatus","status","filterCts","magnetoProtocols","stateString","remainSec","elapsedTime","remainingGotoCount","totalActionNumber","currentActionNumber","pcrStatusTimer","setInterval","clearInterval","span","offset","borderRadius","default","listGroup","button","ListGroup","Item","handler","HistoryModal","tempData","setTempData","setGraphData","JSON","parse","xData","yData","item","tempItem","split","drawTempData","colors","show","Modal","Object","assign","aria-labelledby","size","Header","date","Body","sm","Footer","onHide","HISTORY","ITEM","initialHistory","ct","HistoryList","isShowModal","setIsShowModal","selectedHistory","setSelectedHistory","Table","hover","bordered","histories","showHistory","join","Setup","setHistories","protocolIndex","setProtocolIndex","getProtocols","tempHistories","encodeURIComponent","protocolID","window","confirm","concat","replace","textarea","resize","outline","TextArea","required","cols","rows","onKeyDown","keyCode","preventDefault","start","selectionStart","end","selectionEnd","substring","lines","trim","form","text","fontWeight","image","input","ms","filterType","filterNamesHandler","filtersHandler","min","filterCt","filterCtsHandler","Editor","filterTypes","isEditMode","match","params","eventFlag","setEventFlag","setProtocolID","pcrProtocol","setPcrProtocol","magnetoProtocol","setMagnetoProtocol","getProtocol","label","temp","Number","toFixed","time","convertPcrProtocol","_convertFilters","tempFilters","tempFilterNames","tempFilterCts","lenght","filterIndex","findIndex","convertFilters","decodeURIComponent","lg","marginBottom","Card","_ref","CommandRun","setCommand","InputGroup","Badge","variant","FormControl","placeholder","Button","ProtocolRun","setProtocol","widdth","Status","Protocol","runningCommand","setRunningCommand","updateStatus","statusTimer","StatusRegister","SwitchModeRegister","_ref2","switch_mode","EncoderModeRegister","_ref3","encoder_mode","StepperState","_ref4","driver_position","encoder_position","velocity","console","log","ConfirmModal","message","handleClose","handleConfirm","Fragment","closeButton","Title","StepperHome","actuator","hasHome","hasReleaseSwitch","hasSearchSwitch","hasGoToSwitchLatchPosition","hasSearchEncoderNSignal","hasGoToEncoderNSignal","hasGoToChamberOffsetPosition","hasSetHomePosition","hasShiftFromHome","hasFinishHome","hasSaveChamberOffsetPosition","hasSaveSyringeBottomPosition","setShow","handleShow","setHandleConfirm","confirmMessage","setConfirmMessage","StepperJog","unit","p_str","pp_str","ppp_str","n_str","nn_str","nnn_str","StepperPosition","position_input","setPositionInput","createData","writable","hexDisplay","registers_info","Register","info","setInput","align","Registers","registers","entries","_ref5","_ref6","Goto","Chamber","setDriverPosition","setEncoderPosition","setVelocity","setStatus","setSwitchMode","setEncoderMode","setRegisters","ramp_stat","sw_mode","encmode","Volume","volume_input","setVolumeInput","Syringe","Filter","Magnet","Navigation","Nav","defaultActiveKey","LinkContainer","to","Link","eventKey","href","ReactDOM","render","BrowserRouter","Switch","Route","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.dbdb2126.chunk.js","sourcesContent":["import React from 'react';\nimport Container from 'react-bootstrap/Container';\n\nconst style = {\n    width: 'auto',\n    border: '1px solid rgba(0, 0, 0, .4)',\n    display: 'flex',\n    margin: '5% auto',\n    padding: '10px',\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    backgroundColor: 'whitesmoke',\n\n};\n\nconst Layout = (props) => {\n    return (\n        <Container style={style} className=\"justify-content-md-center\">\n            {props.children}\n        </Container>\n    );\n}\n\nexport default Layout;","import React from 'react';\n\nconst styles = {\n    fieldset: {\n        width : '100%',\n        minHeight : '70%',\n        display: 'inline',\n        border: '1px solid rgba(0, 0, 0, .4)',\n        padding: '10px',\n        margin : '40px 0px'\n    },\n    legend: {\n        width: 'auto',\n        marginLeft: '5px',\n        padding: '0 10px',\n        fontSize: '20px'\n    }\n}\n\nconst Fieldset = props => {\n    return (\n        <fieldset style={styles.fieldset}>\n            <legend style={styles.legend}>{props.title}</legend>\n            {props.children}\n        </fieldset>\n    );\n};\n \nexport default Fieldset;","export const LAYOUT = {\n    width: '80%',\n    border: '1px solid rgba(0, 0, 0, .4)',\n    display: 'flex',\n    margin: '5% auto',\n    padding: '10px',\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    backgroundColor: 'whitesmoke'\n};\n\nexport const FIELDSET = {\n    display: 'inline',\n    border: '1px solid rgba(0, 0, 0, .4)',\n    padding: '10px',\n    margin: '40px 0px'\n};\n\nexport const LEGEND = {\n    width: 'auto',\n    marginLeft: '5px',\n    padding: '0 10px',\n    fontSize: '20px'\n};\nexport const LABEL = {\n    fontSize: '16px',\n    fontFamily: 'Consolas, sans-serif',\n    margin : '5px auto auto auto',\n    minHeight : '25px'\n}\n\nexport const LABEL_BORDERD = {\n    fontSize: '16px',\n    fontFamily: 'Consolas, sans-serif',\n    border: \"1px solid rgba(0, 0, 0, .4)\",\n    margin : '5px auto',\n    minWidth : '50px',\n    minHeight : '25px',\n    textAlign :'center'\n\n}\n\nexport const RESULT_TABLE = {\n    width : '90%',\n    margin : 'auto',\n    textAlign : 'center',\n    border : '1px solid rgba(0, 0, 0, .4)',\n    fontFamily: 'Consolas, sans-serif',\n    tableLayout : 'fixed'\n}\n\nexport const RESULT_TABLE_ITEM = {\n    emptyCells : 'show',\n    border : '1px solid rgba(0, 0, 0, .4)',\n    fontFamily: 'Consolas, sans-serif',\n}\nexport const RESULT_TABLE_ITEM_WHITH = {\n    emptyCells : 'show',\n    border : '1px solid rgba(0, 0, 0, .4)',\n    fontFamily: 'Consolas, sans-serif',\n    backgroundColor : 'white'\n}\n\nexport const TEXTAREA = {\n    resize: 'none',\n    outline: 'none',\n    fontSize: '16px',\n    fontFamily: 'Consolas, sans-serif',\n    width: '100%',\n    border: '1px solid rgba(0, 0, 0, .4)'\n};\n\nexport const BUTTON = {\n    border: '1px solid rgba(0, 0, 0, .3)',\n    width: '100px',\n    margin: '10px',\n    outlineColor: 'rgba(0, 0, 0, .4)',\n};\n\n\nexport const FILTER_FORM = {\n    margin: 'auto 10px'\n}\n\nexport const FILTER_LABEL = {\n    fontSize: '14px',\n    fontWeight: '600',\n    fontFamily: 'Consolas, sans-serif',\n    margin: 'auto',\n};\n\nexport const FILTER_IMAGE = {\n    border: \"1px solid #adadad\",\n    backgroundColor: \"#e1e1e1\",\n    textAlign: \"center\",\n    padding: \"5px\",\n    margin: '5px 10px'\n};\n\nexport const FILTER_INPUT = {\n    width: '80px',\n    height: '30px',\n    padding: '3px',\n    margin: '5px 0px',\n    outline: 'none'\n};\n\nexport const EDITOR_LABEL = {\n    display: 'flex',\n    justifyContent: 'center',\n    textAlign: 'center',\n    fontWeight: '500',\n    margin: 'auto 1px'\n};\n\nexport const EDITOR_INPUT = {\n    height: '30px',\n    fontSize: '0.8em',\n    fontWeight: '600',\n    fontFamily: 'Consolas, sans-serif',\n    padding: '2px',\n    margin: 'auto 10px',\n    outline: 'none'\n};\n\nexport const EDITOR_BOX = {\n    display: 'inline',\n    margin: 'auto 10px'\n};\n\nexport const HISTORY_TABLE = {\n    height: '10px',\n    overflowY: 'scroll',\n};\n\nexport const HISTORY_TBODY = {\n    backgroundColor: 'white'\n};\n\n\nexport const LAYOUT_GRAPH = {\n    showLegend: true,\n    xaxis: {\n        rangemode: 'tozero',\n        title: \"PCR Cycles\",\n    },\n    yaxis: {\n        rangemode: 'nonnegative',\n        title: \"Sensor Value\",\n        range: [0, 4096]\n    }\n};\n\n\nexport const LAYOUT_TEMP = {\n    showLegend: true,\n    xaxis: {\n        rangemode: 'tozero',\n        title: \"Time\",\n    },\n    yaxis: {\n        rangemode: 'tozero',\n        title: \"Temperture\",\n    }\n};\n\nexport const HISTORY_PLOT = {\n    height: '30rem',\n};\n\nexport const PLOT = {\n    width: '100%',\n    height: '100%'\n};\n\nexport const VERTIAL_CENTER = {\n    display : 'flex',\n    verticalAlign : 'center'\n}","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { LABEL, LABEL_BORDERD } from '../../Styles';\n\nconst Connection = props => {\n    return (\n        <Col >\n            <Row>\n                <Col style={LABEL}>Serial Number</Col>\n                <Col style={LABEL_BORDERD}>{props.serialNumber}</Col>\n            </Row>\n            \n            <Row>\n                <Col style={LABEL}>Status</Col>\n                <Col style={LABEL_BORDERD}>{props.isConnected ? 'Connected' : 'Disconnected'}</Col>\n            </Row>\n        </Col>\n    )\n}\n\nexport default Connection;","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { LABEL, LABEL_BORDERD } from '../../Styles';\n\nconst Progress = props => {\n    return (\n        <Col>\n            <Row>\n                <Col style={LABEL}>Protocol</Col>\n                <Col style={LABEL_BORDERD}>{props.protocolName}</Col>\n            </Row>\n\n            <Row>\n                <Col style={LABEL}>State</Col>\n                <Col style={LABEL_BORDERD}>{props.state}</Col>\n            </Row>\n\n            <Row>\n                <Col style={LABEL}>Total Sec</Col>\n                <Col style={LABEL_BORDERD}>{props.remainingTotalSec}</Col>\n            </Row>\n        </Col>\n    );\n}\n\nexport default Progress;","import React, { Row, Col } from 'react';\nimport Plotly from 'plotly.js';\nimport createPlotlyComponent from 'react-plotly.js/factory';\n\nconst Plot = createPlotlyComponent(Plotly);\n\nconst GRAPH = {\n    width: '100%',\n\n}\n\nexport const LAYOUT_GRAPH = {\n    showLegend: true,\n    xaxis: {\n        rangemode: 'tozero',\n        title: \"PCR Cycles\",\n        range: [0, 40]\n    },\n    yaxis: {\n        rangemode: 'nonnegative',\n        title: \"Sensor Value\",\n        range: [0, 4096]\n    }\n};\n\nconst CONFIG = {\n    responsive: false,\n    displaylogo: true,\n    scrollZoom: false,\n    staticPlot: true,\n    displayModeBar: false,\n}\n\nconst FILTERS = ['FAM', 'HEX', 'ROX', 'CY5'];\nconst COLORS = [\"#105f89\", \"#54ab48\", \"#80c13f\", \"#d92623\"];\n\n\nconst Graph = props => {\n    const drawGraphData = (photodiodes) => {\n\n        const graphData = [];\n        props.displayFilters.forEach(\n            (isDisplay, index) => {\n                if (isDisplay) {\n                    graphData.push(\n                        {\n                            name: FILTERS[index],\n                            x: photodiodes[index].length,\n                            y: photodiodes[index],\n                            type: 'line',\n                            line: { color: COLORS[index] }\n                        }\n                    );\n                }\n\n            }\n        );\n\n        return graphData;\n    }\n\n    return (\n        <Plot style={GRAPH} layout={LAYOUT_GRAPH} config={CONFIG} data={drawGraphData(props.photodiodes)} />\n    );\n}\n\nexport default Graph;","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { LABEL, LABEL_BORDERD } from '../../Styles';\n\nconst Device = props => {\n    return (\n        <Col>\n\n            {/* Empty Code */}\n            <Row>\n                <Col style={LABEL}>&nbsp;</Col>\n            </Row>\n            {/* Empty Code */}\n\n             \n            <Row>\n                <Col style={LABEL}>Temperature</Col>\n                <Col style={LABEL_BORDERD}>{props.temperature + '℃'}</Col>\n            </Row>\n\n            \n        </Col>\n    )\n}\n\nexport default Device;\n\n","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { FILTER_IMAGE, LABEL_BORDERD, LABEL } from '../../Styles';\n\n\n\nconst FilterForm = props => {\n    const filterTypes = ['FAM', 'HEX', 'ROX', 'CY5'];\n\n    const getFilterImage = () => {\n        const publicUrl = process.env.PUBLIC_URL;\n        if (props.isShow) {\n            switch (props.filter) {\n                case 'FAM':\n                    return publicUrl + '/static/img/fam.bmp';\n                case 'HEX':\n                    return  publicUrl + '/static/img/hex.bmp';\n                case 'ROX':\n                    return  publicUrl + '/static/img/rox.bmp';\n                case 'CY5':\n                    return  publicUrl + '/static/img/cy5.bmp';\n                default:\n                    return  publicUrl + '/static/img/off.bmp';\n            }\n        } else {\n            return  publicUrl + '/static/img/off.bmp';\n        }\n\n    }\n\n    return (\n        <Col md='auto' xs='auto'>\n            <Row className=\"justify-content-center\" style={LABEL}> {filterTypes[props.index]} </Row>\n            <Row className=\"justify-content-center\">\n                <img src={getFilterImage()} style={FILTER_IMAGE} id={props.index} onClick={props.displayHandler} />\n            </Row>\n            <Row className=\"justify-content-center\" style={LABEL_BORDERD} disabled={props.isShow}>\n                &nbsp;\n                {props.resultCt ? props.resultCt : ''}\n                &nbsp;\n            </Row>\n        </Col>\n    )\n}\n\nexport default FilterForm;\n","const os = require('os');\r\n\r\n// const API_URL = 'http://' + os.hostname() + ':6009';\r\n// const API_URL = 'http://' + '192.168.137.21' + ':6009';\r\nconst API_URL = 'http://' + '192.168.137.10' + ':6009';\r\n\r\n\r\nexport const PCR_STATUS        = API_URL + '/api/task/status';\r\nexport const PCR_START         = API_URL + '/api/task/start';\r\nexport const PCR_STOP          = API_URL + '/api/task/stop';\r\n\r\nexport const PROTOCOL_LIST     = API_URL + '/api/protocol/list';\r\nexport const PROTOCOL_SELECT   = API_URL + '/api/protocol/select';\r\nexport const PROTOCOL_CHECK    = API_URL + '/api/protocol/check';\r\nexport const PROTOCOL_CREATE   = API_URL + '/api/protocol/create';\r\nexport const PROTOCOL_EDIT     = API_URL + '/api/protocol/edit';\r\nexport const PROTOCOL_DELETE   = API_URL + '/api/protocol/delete';\r\n\r\nexport const HISTORY_LIST      = API_URL + '/api/history/list';\r\nexport const HISTORY_GRAPHDATA = API_URL + '/api/history/graphdata';\r\nexport const HISTORY_TEMPDATA  = API_URL + '/api/history/tempdata';\r\n\r\nexport const MAGNETO_RUN = API_URL + '/api/magneto/run';\r\nconst post = (command, callback = null) => {\r\n    // console.log(command)\r\n    fetch(MAGNETO_RUN,\r\n        {\r\n            method: 'POST',\r\n            headers: { \"Content-Type\": \"text/plain\" },\r\n            body: command\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            // console.log(response)\r\n            if (response.result === 'ok') {\r\n                if (callback != null) {\r\n                    callback(response.data);\r\n                }\r\n            } else {\r\n                alert(response.reason);\r\n            }\r\n        });\r\n}\r\nexport const usePost = () => {\r\n    return post;\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { PROTOCOL_LIST, PROTOCOL_SELECT } from '../../API';\n\nconst SELECT = {\n    margin: '10px auto',\n    fontFamily: 'Consolas, sans-serif',\n}\n\nconst OPTION = {\n    fontFamily: 'Consolas, sans-serif',\n}\n\nconst ProtocolList = props => {\n\n    const [protocols, setProtocols] = useState([]); //protocol list state\n\n\n    // get Protocol List (Call protocol list API)\n    const getProtocols = () => {\n        fetch(PROTOCOL_LIST, { method: 'POST' })\n            .then(response => response.json())\n            .then(response => {\n                const result = response.result;\n                setProtocols(response.protocols);\n                if (response.protocols.length === 1) {\n                    selectProtocol(response.protocols[0].id);\n                }\n            });\n    };\n\n    // TODO : select api 호출\n    const selectProtocol = id => {\n        fetch(PROTOCOL_SELECT,\n            {\n                method: 'POST',\n                headers: { 'Content-Type': 'text/plain' },\n                body: id.toString()\n            })\n            .then(response => response.json())\n            .then(response => {\n                if (response.result === 'ok') {\n                    // TODO : show protocol change message\n\n                } else {\n                    alert(response.reason);\n                }\n            });\n    };\n\n\n    const changeHandler = event => {\n        const id = event.target.value;\n        selectProtocol(id);\n    };\n\n\n    useEffect(() => {\n        getProtocols();\n    }, []);\n\n    return (\n        <Col as='select' md='8' xs='8' style={SELECT} onChange={changeHandler}>\n            {\n                protocols.map(\n                    (protocol, index) =>\n                        <option key={index}\n                            style={OPTION}\n                            value={protocol.id}\n                            selected={protocol.name == props.protocolName}>\n                            {protocol.name}\n                        </option>\n                )\n            }\n        </Col>\n    );\n}\n\nexport default ProtocolList;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Table } from 'react-bootstrap';\nimport { RESULT_TABLE, RESULT_TABLE_ITEM, RESULT_TABLE_ITEM_WHITH } from '../../Styles';\n\n\nconst ResultTable = props => {\n\n    const [tableItems, setTableItems] = useState([{}, {}, {}, {}]);\n    // const filterNames = JSON.parse(props.filterNames);\n\n    useEffect(() => {\n        const results = props.results.filter(result => result);\n        const filterNames = props.filterNames.filter(filterName => filterName);\n\n        filterNames.forEach(\n            (filterName, index) => {\n                tableItems[index].name = filterName;\n                tableItems[index].result = results[index] ? results[index] : '';\n\n            }\n        );\n\n    }, [props.results, props.filterNames])\n\n\n    return (\n        <Col>\n            <table style={RESULT_TABLE}>\n                <thead>\n                    <th style={RESULT_TABLE_ITEM}>Target</th>\n                    <th style={RESULT_TABLE_ITEM}>Result</th>\n                </thead>\n                <tbody>\n                    {\n                        tableItems.map(\n                            (tableItem, index) => {\n                                return (\n                                    <tr key={index} style={RESULT_TABLE_ITEM}>\n                                        <td style={RESULT_TABLE_ITEM}>&nbsp;{tableItem.name ? tableItem.name : ''}&nbsp;</td>\n                                        <td style={RESULT_TABLE_ITEM_WHITH}>&nbsp;{tableItem.result ? tableItem.result : ''}&nbsp;</td>\n                                    </tr>\n                                );\n                            }\n                        )\n                    }\n\n                </tbody>\n            </table>\n        </Col>\n    );\n}\n\n\nexport default ResultTable;","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport Fieldset from '../components/Fieldset';\n\nimport Connection from '../components/main/Connection';\nimport Progress from '../components/main/Progress';\nimport Graph from '../components/main/Graph';\nimport Device from '../components/main/Device';\nimport FilterForm from '../components/main/FilterForm';\nimport ProtocolList from '../components/main/ProtocolList';\nimport ResultTable from '../components/main/ResultTable';\n\nimport { PCR_STATUS, PCR_START, PCR_STOP, test } from '../API';\nimport { BUTTON } from '../Styles';\n\nconst Main = () => {\n    // initialize values\n\n    // router\n    const history = useHistory();\n\n    // device info\n    const [isConnected, setConnected] = useState(false);\n    const [serialNumber, setSerialNumber] = useState('');\n\n    // filter  \n    const [filters, setFilters] = useState(['', '', '', '']);\n    const [filterCts, setFilterCts] = useState(['', '', '', '']);\n    const [filterNames, setFilterNames] = useState(['', '', '', '']);\n    const [displayFilters, setDisplayFilters] = useState([true, true, true, true])\n\n    // result \n    const [results, setResults] = useState(['', '', '', '']);\n    const [resultCts, setResultCts] = useState(['', '', '', '']);\n\n    // protocol \n    const [protocolName, setProtocolName] = useState('');\n    const [protocols, setProtocols] = useState([]);\n    const [magnetoProtocols, setMagnetoProtocols] = useState([]);\n\n    // sensor value\n    const [photodiodes, setPhotodiodes] = useState([[], [], [], []]);\n    const [temperature, setTemperature] = useState(0);\n\n    // pcr state\n    const [state, setState] = useState('');\n    const [running, setRunning] = useState(false);\n\n    // remain sec\n    const [remainSec, setRemainSec] = useState(0);\n    const [remainingTotalSec, setRemainingTotalSec] = useState(0);\n    const [elapsedTime, setElapsedTime] = useState(0);\n\n    // protocol lines\n    const [remainingGotoCount, setRemainingGotoCount] = useState(0);\n    const [totalActionNumber, setTotalActionNumber] = useState(0);\n    const [currentActionNumber, setCurrentActionNumber] = useState(0);\n\n    const displayHandler = event => {\n        const targetIndex = event.target.id;\n        setDisplayFilters(displayFilters.map((isShow, index) => index == targetIndex ? !isShow : isShow));\n    }\n\n    const toSetup = event => {\n        if (running) {\n            alert('pcr is running');\n        } else {\n            history.push('setup');\n        }\n    }\n\n    const pcrStart = event => {\n        fetch(!running ? PCR_START : PCR_STOP, { method: 'POST' })\n            .then(response => response.json())\n            .then(response => {\n                // TODO : confirm if to run\n            });\n    }\n\n    // update function \n    const updatePcrStatus = () => {\n        fetch(PCR_STATUS, { method: 'POST' }) // fetch data from api\n            .then(response => response.json()) // to json\n            .then(response => { // update paramters\n                setConnected(response.result);\n\n                const status = response.data;\n                setSerialNumber(status.serialNumber);\n\n                // filter\n                setFilters(status.filters);\n                setFilterCts(status.filterCts);\n                setFilterNames(status.filterNames);\n\n                // result \n                setResults(status.result);\n                setResultCts(status.resultCts);\n\n                // protocol \n                setProtocolName(status.protocolName);\n                setProtocols(status.protocols);\n                setMagnetoProtocols(status.magnetoProtocols);\n                // console.log(status.magnetoProtocols);\n\n                setPhotodiodes(status.photodiodes);\n                setTemperature(status.temperature);\n\n                // pcr state\n                setState(status.stateString);\n                setRunning(status.running);\n\n                // remain sec\n                setRemainSec(status.remainSec);\n                setRemainingTotalSec(status.remainingTotalSec);\n                setElapsedTime(status.elapsedTime);\n\n                // protocol lines\n                setRemainingGotoCount(status.remainingGotoCount);\n                setTotalActionNumber(status.totalActionNumber);\n                setCurrentActionNumber(status.currentActionNumber);\n            });\n    };\n    // state life cycle function \n    useEffect(() => {\n        // component did mount\n        const pcrStatusTimer = setInterval(updatePcrStatus, 500); // set update timeer (interval : 0.5s)\n        // component will unmount\n        return () => {\n            clearInterval(pcrStatusTimer);  // clear update timer\n        };\n\n    }, []);\n\n    return (\n        <Container>\n            <Row className=\"justify-content-center\">\n                {/* Connection */}\n                <Col md='5'>\n                    <Fieldset title='Connection'>\n                        <Connection serialNumber={serialNumber} isConnected={isConnected} />\n                    </Fieldset>\n                </Col>\n                {/* Progress */}\n                <Col md='5'>\n                    <Fieldset title='Progress'>\n                        <Progress protocolName={protocolName} state={state} remainingTotalSec={remainingTotalSec} />\n                    </Fieldset>\n                </Col>\n            </Row>\n            {/* Graph */}\n            <Row className=\"justify-content-center\">\n                <Col md='10' xs='10'>\n                    {/* TODO : Plot Graph */}\n                    <Graph photodiodes={photodiodes} displayFilters={displayFilters}/>\n                </Col>\n            </Row>\n            <Row className=\"justify-content-center\">\n                {/* Device */}\n                <Col md='4'>\n                    <Fieldset title='Device'>\n                        <Device temperature={temperature} />\n                    </Fieldset>\n                </Col>\n                {/* CT Value */}\n                <Col md={{ span: '5', offset: '1' }}>\n                    <Fieldset title='CT Value'>\n                        <Row className=\"justify-content-center\">\n                            {\n                                filters.map(\n                                    (filter, index) => {\n                                        return <FilterForm key={index} isShow={displayFilters[index]}\n                                            displayHandler={displayHandler}\n                                            filter={filter} index={index} resultCt={resultCts[index]} />\n                                    }\n                                )\n                            }\n                        </Row>\n                    </Fieldset>\n                </Col>\n            </Row>\n            <Row className=\"justify-content-center\">\n                <Col md='4'>\n                    {/* Protocol */}\n                    <Fieldset title='Protocol'>\n                        <Row className=\"justify-content-center\">\n                            <ProtocolList />\n                        </Row>\n                        <Row className=\"justify-content-center\">\n                            <Col as='button' md='8' xs='8' style={BUTTON} onClick={pcrStart}> {!running ? 'Start' : 'Stop'} </Col>\n                        </Row>\n                        <Row className=\"justify-content-center\">\n                            <Col as='button' md='8' xs='8' style={BUTTON} onClick={toSetup} disabled={running}> Setup </Col>\n                        </Row>\n                    </Fieldset>\n                </Col>\n                <Col md={{ span: '5', offset: '1' }}>\n                    {/* Result */}\n                    <Fieldset title='Result'>\n                        <Row className='justify-content-center'>\n                            <ResultTable filterNames={filterNames} results={results}/>\n                        </Row>\n                    </Fieldset>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default Main;","import React from 'react';\nimport { ListGroup } from 'react-bootstrap';\n\nconst styles = {\n    selected: {\n        backgroundColor: 'rgba(0, 0, 0, .4)',\n        fontFamily: 'Consolas, sans-serif',\n        padding: \"5px\",\n        border: 'none',\n        borderRadius: '0px',\n    },\n    default: {\n        backgroundColor: \"#FFF\",\n        fontFamily: 'Consolas, sans-serif',\n        padding: \"5px\",\n        border: 'none',\n        borderRadius: '0px'\n\n    },\n    listGroup: {\n        width: '100%',\n        height: \"120px\",\n        overflowY: \"scroll\",\n        backgroundColor: \"white\",\n        borderRadius: '0px',\n        margin: '10px'\n\n    },\n    button: {\n        width: \"100%\",\n        margin: \"10px\",\n        justifyContent: \"center\",\n    }\n\n}\n\nconst ProtocolList = props => {\n    return (\n        <ListGroup style={styles.listGroup}>\n            {\n                props.protocols.map(\n                    (protocol, index) => {\n                        return (\n                            <ListGroup.Item\n                                key={index} id={index}\n                                onClick={props.handler}\n                                style={protocol.selected\n                                    ? styles.selected\n                                    : styles.default} >\n                                {protocol.name}\n                            </ListGroup.Item>\n                        )\n\n                    }\n                )\n            }\n        </ListGroup>\n    );\n}\n\nexport default ProtocolList;","import React, { useState, useEffect } from 'react';\n\nimport { Modal, Row, Col, Container } from 'react-bootstrap';\n// import Plot from 'react-plotly.js';\n\nimport Plotly from 'plotly.js';\nimport createPlotlyComponent from 'react-plotly.js/factory';\n\nimport { HISTORY_TEMPDATA, HISTORY_GRAPHDATA } from '../../API';\nimport { LAYOUT_GRAPH, LAYOUT_TEMP, HISTORY_PLOT, PLOT } from '../../Styles';\n\nconst Plot = createPlotlyComponent(Plotly);\n\nconst CONFIG = {\n    responsive: false,\n    displaylogo: true,\n    scrollZoom: false,\n    staticPlot: true,\n    displayModeBar: false,\n}\n\nconst HistoryModal = props => {\n\n    const [tempData, setTempData] = useState([]);\n    const [graphData, setGraphData] = useState([]);\n\n    const drawTempData = (data) => {\n        const xData = [];\n        const yData = [];\n\n        data.forEach(item => {\n            const tempItem = item.split('\\t');\n            xData.push(tempItem[0]);\n            yData.push(tempItem[1]);\n        })\n        return {\n            name: \"temparture\",\n            x: xData,\n            y: yData,\n            type: \"line\",\n            line: { color: \"#45B5C6\" }\n        }\n    }\n\n\n    const drawGraphData = (data) => {\n        const filters = [\"FAM\", \"HEX\", \"ROX\", \"CY5\"];\n        const colors = [\"#105f89\", \"#54ab48\", \"#80c13f\", \"#d92623\"];\n\n        data = filters.map((filter, index) => {\n            return {\n                name: filter,\n                x: data[index].length,\n                y: data[index],\n                type: 'line',\n                line: { color: colors[index] }\n            }\n        });\n        return data;\n    };\n\n\n    const getTempDataList = () => {\n        if (props.history.id === -1) {\n            return;\n        }\n        fetch(HISTORY_TEMPDATA,\n            {\n                method: 'POST',\n                headers: { 'Content-Type': 'text/plain' },\n                body: props.history.id.toString()\n            })\n            .then(response => response.json())\n            .then(response => JSON.parse(response.tempData))\n            .then(data => drawTempData(data))\n            .then(data => setTempData(data));\n    };\n\n    const getGraphDataList = () => {\n        if (props.history.id === -1) {\n            return;\n        }\n        fetch(HISTORY_GRAPHDATA,\n            {\n                method: 'POST',\n                headers: { 'Content-Type': 'text/plain' },\n                body: props.history.id.toString()\n            })\n            .then(response => response.json())\n            .then(response => JSON.parse(response.graphData))\n            .then(data => drawGraphData(data))\n            .then(data => setGraphData(data));\n    };\n\n\n\n\n    useEffect(() => {\n        getTempDataList();\n        getGraphDataList();\n    }, [props.show]);\n\n\n    return (\n        <Modal\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            size='xl' {...props}>\n            <Modal.Header>\n                {props.history.date}\n            </Modal.Header>\n            <Modal.Body>\n                <Container>\n                    <Row className='justify-content-center'>\n                        <Col md='10' sm='12' style={HISTORY_PLOT}>\n                            <Plot style={PLOT} data={graphData} layout={LAYOUT_GRAPH} config={CONFIG} />\n                        </Col>\n\n                        <Col md='10' sm='12' style={HISTORY_PLOT}>\n                            <Plot style={PLOT} data={tempData} layout={LAYOUT_TEMP} config={CONFIG} />\n                        </Col>\n\n                    </Row>\n                </Container>\n            </Modal.Body>\n            <Modal.Footer>\n                <button onClick={props.onHide}>Close</button>\n            </Modal.Footer>\n\n        </Modal>\n    );\n}\n\nexport default HistoryModal;","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Table } from 'react-bootstrap';\nimport { HISTORY_TABLE, HISTORY_TBODY } from '../../Styles';\nimport HistoryModal from './HistoryModal';\n\nconst HISTORY = {\n    height: '250px',\n    overflowY: 'scroll'\n}\n\nconst ITEM = {\n    fontFamily: 'Consolas, sans-serif',\n}\n\n\n\nconst initialHistory = { id: -1, date: '', target: '', filter: '', ct: '', result: '' }\n\nconst HistoryList = props => {\n    const [isShowModal, setIsShowModal] = useState(false);\n    const [selectedHistory, setSelectedHistory] = useState(initialHistory);\n\n    const showHistory = (event, index) => {\n        setSelectedHistory(props.histories[index]);\n        setIsShowModal(true);\n    }\n\n    const onHide = () => {\n        setIsShowModal(false);\n    };\n    return (\n        <Col style={HISTORY}>\n            <Table hover bordered size='sm' style={HISTORY_TABLE}>\n                <thead>\n                    <tr>\n                        <th></th>\n                        <th>Date Time</th>\n                        <th>Target</th>\n                        <th>Filter</th>\n                        <th>CT Value</th>\n                        <th>Result</th>\n                    </tr>\n                </thead>\n                <tbody style={HISTORY_TBODY}>\n                    {\n                        props.histories.map(\n                            (history, index) => {\n                                return (\n                                    <tr key={index}\n                                        onClick={event => showHistory(event, index)}>\n                                        <td style={ITEM}>{'#' + index}</td>\n                                        <td style={ITEM}>{history.date}</td>\n                                        <td style={ITEM}>{history.target.join(', ')}</td>\n                                        <td style={ITEM}>{history.filter.join(', ')}</td>\n                                        <td style={ITEM}>{history.ct.join(', ')}</td>\n                                        <td style={ITEM}>{history.result.join(', ')}</td>\n                                    </tr>\n                                );\n                            }\n                        )\n                    }\n\n                </tbody>\n                <HistoryModal\n                    onHide={onHide}\n                    history={selectedHistory}\n                    show={isShowModal} />\n\n            </Table>\n        </Col>\n\n    );\n}\n\nexport default HistoryList;","import React, { useState, useEffect, Fragment } from 'react';\nimport { useHistory, Router } from 'react-router-dom';\n\nimport Fieldset from '../components/Fieldset';\n\nimport ProtocolList from '../components/setup/ProtocolList';\nimport HistoryList from '../components/setup/HistoryList';\n\nimport { Row, Col, Container } from 'react-bootstrap';\nimport { PROTOCOL_LIST, HISTORY_LIST, PROTOCOL_DELETE } from '../API';\nimport { BUTTON } from '../Styles';\n\n\nconst Setup = () => {\n    const history = useHistory();\n    const [protocols, setProtocols] = useState([]);\n    const [histories, setHistories] = useState([]);\n    const [protocolIndex, setProtocolIndex] = useState(-1);\n    // Call protocol list api\n    const getProtocols = () => {\n        fetch(PROTOCOL_LIST, { method: 'POST' })\n            .then(response => response.json())\n            .then(response => {\n                if (response.result === 'ok') {\n                    const tempProtocols = response.protocols;\n\n                    tempProtocols.forEach(protocol => {\n                        protocol.selected = false;\n                    });\n\n                    setProtocols(response.protocols);\n\n                } else {\n                    alert('You need to make the protocol first.');\n                }\n            });\n    };\n\n    // Call History list api\n    const getHistories = () => {\n        //TODO : Call history list api\n        fetch(HISTORY_LIST, { method: 'POST' })\n            .then(response => response.json())\n            .then(response => {\n\n                if (response.result === 'ok') {\n                    const tempHistories = response.histories;\n\n                    tempHistories.forEach(history => {\n\n                        history.target = JSON.parse(history.target).filter(target => target);\n                        history.filter = JSON.parse(history.filter).filter(filter => filter);\n                        history.result = JSON.parse(history.result).filter(result => result);\n                        history.ct = JSON.parse(history.ct).filter(ct => ct);\n\n                    });\n                    setHistories(tempHistories);\n                }\n            });\n    };\n\n    const protocolHandler = event => {\n        const index = event.target.id;\n        if (protocolIndex === -1) {\n            protocols[index].selected = true;\n            setProtocolIndex(index);\n        }\n        else if (protocolIndex === index) {\n            protocols[protocolIndex].selected = false;\n            setProtocolIndex(-1);\n        } else {\n            protocols[protocolIndex].selected = false;\n            protocols[index].selected = true;\n            setProtocolIndex(index);\n        }\n    };\n\n    const creactProtocol = event => {\n        history.push('editor/new');\n    }\n\n    const editProtocol = event => {\n        if (protocolIndex === -1) {\n            alert('You need to select the protocol first.');\n        } else {\n            history.push('editor/' + encodeURIComponent(protocols[protocolIndex].name));\n        }\n    }\n\n    const delelteProtocol = event => {\n        // TODO : Call delete protocol api \n        if (protocolIndex === -1) {\n            alert('You need to select the protocol first.');\n            return;\n        }\n        const protocolName = protocols[protocolIndex].name;\n        const protocolID = protocols[protocolIndex].id;\n        \n        const result = window.confirm(`confirm to delete this protocol(${protocolName})`);\n\n        if (result) {\n            fetch(PROTOCOL_DELETE,\n                {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'text/plain' },\n                    body: protocolID.toString()\n                }\n            )\n                .then(response => response.json())\n                .then(response => {\n                    alert(`complete to delete protocol(${protocolName})`);\n                    getProtocols();\n                })\n        }\n    }\n    // \n    useEffect(() => {\n        getProtocols();\n        getHistories();\n    }, [])\n\n    return (\n        <Container>\n            <Row className=\"justify-content-center\">\n                <Col md='9'>\n                    <Fieldset title='Protocol Manager'>\n                        <Row>\n                            <Col md='8' xs='8'>\n                                <ProtocolList protocols={protocols} handler={protocolHandler} />\n                            </Col>\n                            <Col md={{ span: '2', offset: '1' }} xs='auto'>\n                                <Row className=\"justify-content-center\">\n                                    <Col as='button' style={BUTTON} onClick={creactProtocol}>Add</Col>\n                                </Row>\n\n                                <Row className=\"justify-content-center\">\n                                    <Col as='button' style={BUTTON} onClick={editProtocol}>Edit</Col>\n                                </Row>\n\n                                <Row className=\"justify-content-center\">\n                                    <Col as='button' style={BUTTON} onClick={delelteProtocol}>Delete</Col>\n                                </Row>\n\n\n                            </Col>\n                        </Row>\n                    </Fieldset>\n                </Col>\n\n            </Row>\n            <Row className=\"justify-content-md-center\">\n                <Col md='9'>\n                    <Fieldset title='History'>\n                        <HistoryList histories={histories} />\n                    </Fieldset>\n                </Col>\n            </Row>\n            <Row style={{ justifyContent: 'center' }}>\n                <button style={BUTTON} onClick={() => history.replace('')}>Back</button>\n            </Row>\n        </Container>\n    );\n\n}\nexport default Setup;","import React from 'react';\n\nconst styles = {\n    textarea: {\n        resize: 'none',\n        outline: 'none',\n        fontSize: '16px',\n        padding : '5px 10px',\n        fontFamily: 'Consolas, sans-serif',\n        width : '100%',\n        border : '1px solid rgba(0, 0, 0, .4)'\n    }\n}\n\n// Event KeyCode \nconst TAB_CODE = 9;\nconst ENTER_CODE = 13;\n\n// TODO : 정규식으로 문법 검사\n\nconst TextArea = props => {\n    const keyDownEvent = event => {\n        // input key : Tab\n        if (event.keyCode === TAB_CODE) {\n            event.preventDefault();\n            const value = event.target.value;   // text value\n            const start = event.target.selectionStart; // selection start index\n            const end = event.target.selectionEnd;  // selection end index\n            event.target.value = value.substring(0, start) + '\\t' + value.substring(end);   // insert \\t\n            event.target.selectionStart = event.target.selectionEnd = start + 1; // set selcetion index\n            return false;\n        }\n        // input key : Enter\n        if (event.keyCode === ENTER_CODE) {\n            const tempLines = event.target.value.split('\\n')        // split by line\n            const lines = tempLines.map(line => line.trim());     // remove margins\n            event.target.value = lines.join('\\n');               // combined by '\\n'\n        }\n    };\n\n    return <textarea\n        required\n        cols='60'\n        // rows='10'\n        rows={props.rows || '10'}\n        name={props.name}\n        index = {0}\n        value={props.protocol}\n        style={styles.textarea}\n        onKeyDown={keyDownEvent}\n        onChange={props.handler} />\n}\n\nexport default TextArea;","import React from 'react';\nimport { Row, Col  } from 'react-bootstrap';\nconst styles = {\n    form: {\n        margin: 'auto 10px'\n    },\n    text: {\n        fontSize: '14px',\n        fontWeight: '600',\n        fontFamily: 'Consolas, sans-serif',\n        margin: 'auto'\n    },\n    image: {\n        border: \"1px solid #adadad\",\n        backgroundColor: \"#e1e1e1\",\n        textAlign: \"center\",\n        padding: \"5px\",\n        margin: '5px 10px'\n    },\n    input: {\n        width: '80px',\n        height: '30px',\n        padding: '3px',\n        margin: '5px 0px',\n        outline: 'none'\n    },\n\n\n\n}\nconst FilterForm = props => {\n    const getFilterImage = () => {\n        const publicUrl = process.env.PUBLIC_URL;\n        if (props.filter) {\n            switch (props.filterType) {\n                case 'FAM':\n                    return  publicUrl + '/static/img/fam.bmp';\n                case 'HEX':\n                    return  publicUrl + '/static/img/hex.bmp';\n                case 'ROX':\n                    return  publicUrl + '/static/img/rox.bmp';\n                case 'CY5':\n                    return  publicUrl + '/static/img/cy5.bmp';\n                default:\n                    return  publicUrl + '/static/img/off.bmp';\n            }\n        } else {\n            return  publicUrl + '/static/img/off.bmp'; \n        }\n        \n    }\n\n\n    return (\n        <Col ms='auto' xs='auto' style={styles.form}>\n            <Row >\n                <span style={styles.text}>{props.filterType}</span>\n                <input type='text' style={styles.input} name={props.filterType}\n                    value={props.filterName} onChange={props.filterNamesHandler}\n                    disabled={!props.filter} />\n            </Row>\n\n            <Row>\n                <img style={styles.image} name={props.filterType}\n                    src={getFilterImage()} onClick={props.filtersHandler} />\n                <input type='number' min=\"0\" style={styles.input} name={props.filterType}\n                    value={props.filterCt} onChange={props.filterCtsHandler}\n                    disabled={!props.filter} />\n            </Row>\n        </Col>\n    );\n\n};\n\nexport default FilterForm;","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Layout from '../components/Layout';\r\nimport Fieldset from '../components/Fieldset';\r\n\r\nimport TextArea from '../components/editor/Textarea';\r\nimport FilterForm from '../components/editor/FilterForm';\r\n\r\nimport { PROTOCOL_LIST, PROTOCOL_CHECK, PROTOCOL_CREATE, PROTOCOL_EDIT } from '../API';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\n\r\nconst styles = {\r\n    text: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        textAlign: 'center',\r\n        fontWeight: '500',\r\n        margin: 'auto 0px'\r\n    },\r\n    input: {\r\n        height: '30px',\r\n        fontSize: '0.8em',\r\n        fontWeight: '600',\r\n        fontFamily: 'Consolas, sans-serif',\r\n        padding: '2px 5px',\r\n        margin: 'auto 20px auto 0px',\r\n        outline: 'none'\r\n    },\r\n    button: {\r\n        border: '1px solid rgba(0, 0, 0, .3)',\r\n        width: '100px',\r\n        margin: '20px 30px',\r\n        outlineColor: 'rgba(0, 0, 0, .4)',\r\n    },\r\n    form: {\r\n        display: 'inline',\r\n        margin: 'auto 10px'\r\n    },\r\n\r\n}\r\n\r\nconst Editor = props => {\r\n    const history = useHistory();\r\n    const filterTypes = ['FAM', 'HEX', 'ROX', 'CY5']; // filter Type list\r\n    const isEditMode = props.match.params.name !== 'new'; // check edit protocol mode state\r\n\r\n    const [eventFlag, setEventFlag] = useState(false);\r\n    const [protocolID, setProtocolID] = useState(-1);   // protocol id state\r\n    const [protocolName, setProtocolName] = useState(''); // protocol name state\r\n    const [pcrProtocol, setPcrProtocol] = useState('');  // pcr protocol state\r\n    const [magnetoProtocol, setMagnetoProtocol] = useState(''); // magneto protocol state\r\n    const [filters, setFilters] = useState([true, true, true, true]);  // filter on & off state \r\n    const [filterCts, setFilterCts] = useState([38, 38, 38, 38]); // CT value list state\r\n    const [filterNames, setFilterNames] = useState(['', '', '', '']);// filter name list state\r\n\r\n\r\n    const convertPcrProtocol = (protocol) => {\r\n        const lines = [];\r\n        protocol.forEach((line) => {\r\n            const label = line.label;\r\n            const temp = Number(line.temp).toFixed(0);\r\n            const time = line.time;\r\n\r\n            lines.push([label, temp, time].join('\\t'))\r\n        });\r\n\r\n        return lines.join('\\r\\n');\r\n    };\r\n\r\n    const convertFilters = (filters, filterNames, filterCts) => {\r\n\r\n        const tempFilters = [false, false, false, false];\r\n        const tempFilterNames = ['', '', '', ''];\r\n        const tempFilterCts = [38, 38, 38, 38];\r\n\r\n        if (filters.lenght !== 4) {\r\n            filters.forEach(\r\n                (filter, index) => {\r\n                    const filterIndex = filterTypes.findIndex(filterType => filterType === filter);\r\n                    tempFilters[filterIndex] = true;\r\n                    tempFilterNames[filterIndex] = filterNames[index];\r\n                    tempFilterCts[filterIndex] = filterCts[index];\r\n                }\r\n            )\r\n        }\r\n\r\n        return { filters: tempFilters, filterNames: tempFilterNames, filterCts: tempFilterCts };\r\n    };\r\n\r\n    // filters state event handler function\r\n    const filtersHandler = event => {\r\n        const name = event.target.name;\r\n        setFilters(\r\n            filters.map(\r\n                (filter, index) => filterTypes[index] === name ? !filter : filter\r\n            )\r\n        );\r\n    }\r\n\r\n    // filterCts state event handler function\r\n    const filterCtsHandler = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        setFilterCts(\r\n            filterCts.map(\r\n                (filterCt, index) => filterTypes[index] === name ? value : filterCt\r\n            )\r\n        );\r\n    }\r\n\r\n    // filterNames state event handler function\r\n    const filterNamesHandler = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        setFilterNames(\r\n            filterNames.map(\r\n                (filterName, index) => filterTypes[index] === name ? value : filterName\r\n            )\r\n        );\r\n    }\r\n\r\n    // load protocol data using protocol name (call protocol list api)\r\n    const getProtocol = name => {\r\n        fetch(PROTOCOL_LIST, { method: 'POST' })\r\n            .then(response => response.json())\r\n            .then(response => response.protocols.filter(\r\n                (protocol) => protocol.name === name)[0])\r\n            .then(protocol => {\r\n                // TODO : split protocol text and filter values\r\n                setProtocolID(protocol.id ? protocol.id : -1);\r\n                setProtocolName(protocol.protocolName);\r\n                setPcrProtocol(convertPcrProtocol(JSON.parse(protocol.protocol)));\r\n\r\n                setMagnetoProtocol(JSON.parse(protocol.magnetoProtocol).join('\\r\\n'));\r\n\r\n                const { filters, filterNames, filterCts } = convertFilters(protocol.filters.split(', '),\r\n                    protocol.filterNames.split(', '),\r\n                    protocol.filterCts.split(', '));\r\n\r\n                setFilters(filters);\r\n                setFilterNames(filterNames);\r\n                setFilterCts(filterCts);\r\n            });\r\n    }\r\n\r\n    // call check protocol api \r\n    const checkProtocol = () => {\r\n        // TODO : call check protocol api\r\n    };\r\n\r\n    // call create or edit protocol api\r\n    const saveProtocol = event => {\r\n        // TODO : call editProtocol or newProtocol api \r\n        setEventFlag(true); // disabled click event \r\n\r\n        const protocol = []; // protocol text lines\r\n        const tempFilters = []; // filters line   \r\n        const tempFilterNames = []; // filter names line\r\n        const tempFilterCts = [];  // filter CT Values line\r\n\r\n        filters.forEach((filter, index) => {\r\n            if (filter) {\r\n                tempFilters.push(filterTypes[index]);\r\n                tempFilterNames.push(filterNames[index].trim());\r\n                tempFilterCts.push(filterCts[index]);\r\n            }\r\n        });\r\n\r\n        protocol.push(isEditMode ? protocolID : protocolName);\r\n        protocol.push(tempFilters.join(', ').trim());\r\n        protocol.push(tempFilterNames.join(', ').trim());\r\n        protocol.push(tempFilterCts.join(', ').trim());\r\n        // protocol.push(pcrProtocol.trim());\r\n        pcrProtocol.split('\\n').forEach(line => protocol.push(line.trim()))\r\n        protocol.push('#');\r\n        // protocol.push(magnetoProtocol.trim());\r\n        magnetoProtocol.split('\\n').forEach(line => protocol.push(line.trim()))\r\n\r\n        \r\n        fetch(isEditMode ? PROTOCOL_EDIT : PROTOCOL_CREATE,\r\n            {\r\n                method: 'POST',\r\n                headers: { \"Content-Type\": \"text/plain\" },\r\n                body: protocol.join('\\r\\n').toString()\r\n            })\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                if (response.result === 'ok') {\r\n                    history.replace('/setup');\r\n                } else {\r\n                    alert(response.reason);\r\n                }\r\n            });\r\n\r\n        setEventFlag(false) // enabled click event\r\n\r\n    }\r\n\r\n    //  cancel create or edit task and return setup page \r\n    const cancelProtocol = () => {\r\n        // TODO : route setup page\r\n        history.replace('/setup');\r\n    }\r\n\r\n    // state life cycle function \r\n    useEffect(() => {\r\n        // component did mount\r\n        if (isEditMode) {\r\n            const name = decodeURIComponent(props.match.params.name);\r\n            getProtocol(name);\r\n            setProtocolName(name);\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col md='auto'>\r\n                    {/* Filter Forms */}\r\n                    <Fieldset title='Filter(Label, CT)'>\r\n                        <Row className=\"justify-content-center\">\r\n                            {\r\n                                filterTypes.map(\r\n                                    (filterType, index) => {\r\n                                        return (\r\n                                            <FilterForm\r\n                                                key={index}\r\n                                                filter={filters[index]}\r\n                                                filterType={filterType}\r\n                                                filterName={filterNames[index]}\r\n                                                filterCt={filterCts[index]}\r\n                                                filtersHandler={filtersHandler}\r\n                                                filterCtsHandler={filterCtsHandler}\r\n                                                filterNamesHandler={filterNamesHandler}\r\n                                            />\r\n                                        );\r\n                                    }\r\n                                )\r\n                            }\r\n                        </Row>\r\n                    </Fieldset>\r\n                </Col>\r\n                <Col lg={4} md={3} style={styles.form}>\r\n                    <Row className=\"justify-content-center\">\r\n\r\n                        <Col md='auto' xs='5' style={styles.text} >Protocol Name :</Col>\r\n                        <Col md='auto' xs='5' as=\"input\" type='text' style={styles.input}\r\n                            onChange={event => setProtocolName(event.target.value)} value={protocolName}\r\n                            disabled={isEditMode} />\r\n\r\n                        <Col lg='auto' md='auto' xs='12' >\r\n                            <button style={styles.button} onClick={saveProtocol} disabled={eventFlag}>Save</button>\r\n                            <button style={styles.button} onClick={cancelProtocol}>Cancel</button>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n\r\n            {/* pcr and magneto protcool textarea */}\r\n            <Row className=\"justify-content-center\">\r\n                <Col lg='6' md='5' sm={4}>\r\n                    <Fieldset title=\"PCR Protocol\">\r\n                        <TextArea\r\n                            protocol={pcrProtocol}\r\n                            handler={event => setPcrProtocol(event.target.value)} />\r\n                    </Fieldset>\r\n                </Col>\r\n                <Col lg='6' md='5' sm={4}>\r\n                    <Fieldset title=\"Magneto Protocol\">\r\n                        <TextArea\r\n                            protocol={magnetoProtocol}\r\n                            handler={event => setMagnetoProtocol(event.target.value)} />\r\n                    </Fieldset>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\n\r\nexport default Editor;","import React from 'react';\nimport { Container } from 'react-bootstrap';\n\nconst style = {\n    // width: 'auto',\n    border: '1px solid rgba(0, 0, 0, .4)',\n    borderRadius: '10px',\n    // display: 'flex',\n    // margin: '5% auto',\n    marginBottom: '12px',\n    // padding: '10px',\n    // flexDirection: 'column',\n    // justifyContent: 'space-around',\n    backgroundColor: 'whitesmoke',\n};\n\nconst Card = ( {title, children} ) => {\n    return(\n        <Container style={style} className=\"p-2 mb-10 rounded-3\">\n            <h5>{title}</h5>\n            {children}\n        </Container>\n    );    \n}\n\nexport default Card;\n","import React, { useState } from 'react';\nimport { Button, InputGroup, FormControl, Badge } from 'react-bootstrap';\nimport { usePost } from '../../API';\nimport Card from '../Card'\n\nconst CommandRun = ({running}) => {\n    const [command, setCommand] = useState('chamber goto 3');\n\n    const post = usePost();\n    const stop = event => {\n        post('stop')\n    }\n    const run = (event) => {\n        post(command);\n    }\n    return(\n        <Card title=\"Command\">\n            <InputGroup>\n                {running && <Badge variant=\"info\" size=\"lg\">running</Badge>}\n                {!running && <Badge variant=\"light\" size=\"lg\">ready</Badge>}\n                <FormControl \n                    placeholder=\"command\" \n                    as=\"input\" \n                    value={command} \n                    onChange={event => setCommand(event.target.value)}\n                >\n                </FormControl>\n                <Button \n                    variant={running ? \"outline-secondary\" : \"secondary\"} \n                    disabled={running} \n                    onClick={run}>Run\n                </Button>\n                <Button variant=\"secondary\" onClick={stop}>Stop</Button>\n            </InputGroup>\n        </Card>\n    );\n}\n\n\nexport default CommandRun;","import React, { useState } from 'react';\nimport { Button, FormControl, Badge } from 'react-bootstrap';\nimport { usePost } from '../../API';\nimport Card from '../Card'\n\nconst ProtocolRun = ({running}) => {\n    const [protocol, setProtocol] = useState('home\\nmagnet off\\ngoto 11\\npumping down full\\npumping up 900\\npumping down full\\npumping sup 900\\npumping sdown full\\nmagnet on\\npumping sdown 300\\nwaiting 5');\n\n    const post = usePost();\n    const stop = event => {\n        post('stop')\n    };\n    const run = (event) => {\n        post('protocol_run ' + protocol)\n    };\n    const check = (event) => {\n        post('protocol_check ' + protocol, () => alert('checked, ok'))\n    };\n\n    const onKeyDown = event => {\n        // Event KeyCode \n        const TAB_CODE = 9;\n        const ENTER_CODE = 13;\n\n        if (event.keyCode === TAB_CODE) {\n            event.preventDefault();\n            const value = event.target.value;   // text value\n            const start = event.target.selectionStart; // selection start index\n            const end = event.target.selectionEnd;  // selection end index\n            event.target.value = value.substring(0, start) + '\\t' + value.substring(end);   // insert \\t\n            event.target.selectionStart = event.target.selectionEnd = start + 1; // set selcetion index\n            return false;\n        }\n        if (event.keyCode === ENTER_CODE) {\n            const tempLines = event.target.value.split('\\n')    // split by line\n            const lines = tempLines.map(line => line.trim());   // remove margins\n            event.target.value = lines.join('\\n');              // combined by '\\n'\n        }\n    };\n\n    return(\n        <Card title=\"Protocol\">\n            <FormControl as=\"textarea\"\n                widdth=\"100%\" required rows=\"10\" \n                value={protocol} onKeyDown={onKeyDown}\n                onChange={event => setProtocol(event.target.value)} \n            />\n            {running && <Badge variant=\"info\" size=\"lg\">running</Badge>}\n            {!running && <Badge variant=\"light\" size=\"lg\">ready</Badge>}\n            <Button \n                variant={running ? \"outline-secondary\" : \"secondary\"} \n                disabled={running} \n                onClick={check}>Check\n            </Button>\n            <Button \n                variant={running ? \"outline-secondary\" : \"secondary\"} \n                disabled={running} \n                onClick={run}>Run\n            </Button>\n            <Button variant=\"secondary\" onClick={stop}>Stop</Button>\n        </Card>\n    );\n}\n\n\nexport default ProtocolRun;","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { usePost } from '../API';\nimport Card from '../components/Card';\nimport CommandRun from '../components/protocol/CommandRun';\nimport ProtocolRun from '../components/protocol/ProtocolRun';\n\nconst Status = ( {children} ) => {\n    return(\n        <Card title=\"Status\">\n            {children}\n        </Card>\n    );\n}\n\nconst Protocol = () => {\n    const [running, setRunning] = useState(false);\n    const [runningCommand, setRunningCommand] = useState('');\n\n    const post = usePost();\n    const updateStatus = () => {\n        post('get_status', (data) => {\n            setRunning(data.running);\n            setRunningCommand(data.runningCommand);\n            // console.log(data);\n        } )\n    };\n    // state life cycle function\n    useEffect(() => {\n        // component did mount\n        const statusTimer = setInterval(updateStatus, 500); // set update timeer (interval : 0.5s)\n        // component will unmount\n        return () => {\n            clearInterval(statusTimer);  // clear update timer\n        };\n    }, []);\n\n    return (\n        <Container>\n            <Row className=\"justify-content-center\">\n                <Col md='6'>\n                    <CommandRun running={running} />\n                </Col>\n                <Col md='6'>\n                    <Status>\n                        running command: {runningCommand}\n                    </Status>\n                </Col>\n                <Col md='6'>\n                    <ProtocolRun running={running} />\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default Protocol;","import React from 'react';\r\nimport { usePost } from '../../API';\r\nimport { Badge, Button } from 'react-bootstrap';\r\nimport Card from '../Card'\r\n// import StatusRegister from './StatusRegister';\r\n\r\nconst StatusRegister = ( {status} ) => {\r\n\r\n  return(\r\n      <div>\r\n          status:\r\n          <Badge variant={ (status & 0x0001) && 'warning'}>stop_l</Badge>\r\n          <Badge variant={ (status & 0x0002) && 'warning'}>stop_r</Badge>\r\n          <Badge variant={ (status & 0x0004) && 'warning'}>latch_l</Badge>\r\n          <Badge variant={ (status & 0x0008) && 'warning'}>latch_r</Badge>\r\n          <Badge variant={ (status & 0x0010) && 'warning'}>ev_stop_l</Badge>\r\n          <Badge variant={ (status & 0x0020) && 'warning'}>ev_stop_r</Badge>\r\n          <Badge variant={ (status & 0x0040) && 'warning'}>ev_stop_sg</Badge>\r\n          <Badge variant={ (status & 0x0080) && 'warning'}>ev_pos_reached</Badge>\r\n          <Badge variant={ (status & 0x0100) && 'warning'}>velocity_reached</Badge>\r\n          <Badge variant={ (status & 0x0200) && 'warning'}>position_reached</Badge>\r\n          <Badge variant={ (status & 0x0400) && 'warning'}>vzero</Badge>\r\n          <Badge variant={ (status & 0x0800) && 'warning'}>t_zerowait_active</Badge>\r\n          <Badge variant={ (status & 0x1000) && 'warning'}>second_move</Badge>\r\n          <Badge variant={ (status & 0x2000) && 'warning'}>sg</Badge>\r\n      </div>\r\n  );\r\n}\r\nconst SwitchModeRegister = ( {switch_mode} ) => {\r\n\r\n  return(\r\n      <div>\r\n          switch_mode:\r\n          <Badge variant={ (switch_mode & 0x0001) && 'warning'}>en_stop_l</Badge>\r\n          <Badge variant={ (switch_mode & 0x0002) && 'warning'}>en_stop_r</Badge>\r\n          <Badge variant={ (switch_mode & 0x0004) && 'warning'}>pol_stop_l</Badge>\r\n          <Badge variant={ (switch_mode & 0x0008) && 'warning'}>pol_stop_r</Badge>\r\n          <Badge variant={ (switch_mode & 0x0010) && 'warning'}>swap_lr</Badge>\r\n          <Badge variant={ (switch_mode & 0x0020) && 'warning'}>latch_l_active</Badge>\r\n          <Badge variant={ (switch_mode & 0x0040) && 'warning'}>latch_l_inactive</Badge>\r\n          <Badge variant={ (switch_mode & 0x0080) && 'warning'}>latch_r_active</Badge>\r\n          <Badge variant={ (switch_mode & 0x0100) && 'warning'}>latch_r_inactive</Badge>\r\n          <Badge variant={ (switch_mode & 0x0200) && 'warning'}>en_latch_encoder</Badge>\r\n          <Badge variant={ (switch_mode & 0x0400) && 'warning'}>sg_stop</Badge>\r\n          <Badge variant={ (switch_mode & 0x0800) && 'warning'}>en_softstop</Badge>\r\n      </div>\r\n  );\r\n}\r\nconst EncoderModeRegister = ( {encoder_mode} ) => {\r\n\r\n  return(\r\n      <div>\r\n          encoder_mode:\r\n          <Badge variant={ (encoder_mode & 0x0001) && 'warning'}>pol_A</Badge>\r\n          <Badge variant={ (encoder_mode & 0x0002) && 'warning'}>pol_B</Badge>\r\n          <Badge variant={ (encoder_mode & 0x0004) && 'warning'}>pol_N</Badge>\r\n          <Badge variant={ (encoder_mode & 0x0008) && 'warning'}>ignore_AB</Badge>\r\n          <Badge variant={ (encoder_mode & 0x0010) && 'warning'}>clr_cont</Badge>\r\n          <Badge variant={ (encoder_mode & 0x0020) && 'warning'}>clr_once</Badge>\r\n          <Badge variant={ (encoder_mode & 0x0040) && 'warning'}>pos_edge</Badge>\r\n          <Badge variant={ (encoder_mode & 0x0080) && 'warning'}>neg_edge</Badge>\r\n          <Badge variant={ (encoder_mode & 0x0100) && 'warning'}>clr_enc_x</Badge>\r\n          <Badge variant={ (encoder_mode & 0x0200) && 'warning'}>latch_x_act</Badge>\r\n          <Badge variant={ (encoder_mode & 0x0400) && 'warning'}>enc_sel_decimal</Badge>\r\n      </div>\r\n  );\r\n}\r\n\r\nconst StepperState = ({running, driver_position, encoder_position, velocity, switch_mode, encoder_mode, status}) => {\r\n    const post = usePost();\r\n    const stop = event => {\r\n        console.log('stop');\r\n        post('stop')\r\n    }\r\n\r\n    return(\r\n        <Card title=\"State\">\r\n            driver pos: {`${driver_position.toFixed(1)}`} {', '}\r\n            encoder pos: {`${encoder_position.toFixed(1)}`} {', '}\r\n            velocity: {`${velocity.toFixed(1)}`}\r\n            {running && <Badge variant=\"info\" size=\"lg\">running</Badge>}\r\n            {!running && <Badge variant=\"light\" size=\"lg\">ready</Badge>}\r\n            <Button variant=\"secondary\" onClick={stop}>Stop</Button>\r\n            <StatusRegister status={status}/>\r\n            <SwitchModeRegister switch_mode={switch_mode}/>\r\n            <EncoderModeRegister encoder_mode={encoder_mode}/>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default StepperState;\r\n","import React, { useState } from 'react';\r\nimport { usePost } from '../../API';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport Card from '../Card'\r\n\r\nconst ConfirmModal = ({ show, message, handleClose, handleConfirm }) => {\r\n    const confirm = () => {\r\n        if (handleConfirm) {\r\n            handleConfirm();\r\n        }\r\n        handleClose();\r\n    };\r\n    return (\r\n        <>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Waring</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>{message}</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={confirm}>\r\n                        Confirm\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nconst StepperHome = ({ running, actuator, hasHome,\r\n    hasReleaseSwitch, hasSearchSwitch, hasGoToSwitchLatchPosition,\r\n    hasSearchEncoderNSignal, hasGoToEncoderNSignal,\r\n    hasGoToChamberOffsetPosition,\r\n    hasSetHomePosition, hasShiftFromHome, hasFinishHome,\r\n    hasSaveChamberOffsetPosition, hasSaveSyringeBottomPosition\r\n  }) => {\r\n    const post = usePost();\r\n    const stop = event => {\r\n        console.log('stop');\r\n        post('stop')\r\n    }\r\n    const home = (event) => {\r\n        post(`${actuator} home`);\r\n    }\r\n    const release_switch = (event) => {\r\n      post(`${actuator} release_switch`);\r\n    }\r\n    const search_switch = (event) => {\r\n      post(`${actuator} search_switch`);\r\n    } \r\n    const go_to_switch_latch_position = (event) => {\r\n      post(`${actuator} go_to_switch_latch_position`);\r\n    } \r\n    const search_encoder_n_signal = (event) => {\r\n      post(`${actuator} search_encoder_n_signal`);\r\n    }\r\n    const go_to_encoder_n_signal = (event) => {\r\n      post(`${actuator} go_to_encoder_n_signal`);\r\n    } \r\n    const go_to_chamber_offset_position = (event) => {\r\n      post(`${actuator} go_to_offset_position`);\r\n    } \r\n    const set_home_position = (event) => {\r\n      post(`${actuator} set_home_position`);\r\n    } \r\n    const shift_from_home = (event) => {\r\n      post(`${actuator} shift_from_home`);\r\n    } \r\n    const finish_home = (event) => {\r\n      post(`${actuator} finish_home`);\r\n    } \r\n    const saveChamberOffsetPosition = (event) => {\r\n      post(`${actuator} save_offset_position`, () => alert('Chamber driver offset position has been saved to file.'));\r\n    }\r\n    const saveSyringeBottomPosition = (event) => {\r\n      post(`${actuator} save_bottom_position`, () => alert('Syringe driver bottom position has been saved to file.'));\r\n    }\r\n\r\n\r\n    // confirm modal\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [handleConfirm, setHandleConfirm] = useState(null);\r\n    const [confirmMessage, setConfirmMessage] = useState('');\r\n    const confirmSaveChamberOffsetPosition = (event) => {\r\n      setConfirmMessage('Chamber offset position will be saved to file. Are you sure?')\r\n      setHandleConfirm(() => () => { saveChamberOffsetPosition() });\r\n      handleShow();\r\n    }\r\n    const confirmSaveSyringeBottomPosition = (event) => {\r\n      setConfirmMessage('Syringe bottom position will be saved to file. Are you sure?')\r\n      setHandleConfirm(() => () => { saveSyringeBottomPosition() });\r\n      handleShow();\r\n  }\r\n\r\n    return (\r\n        <Card title=\"Home\">\r\n            {hasHome && <Button variant=\"outline-secondary\" disabled={running} onClick={home}>Home</Button>}\r\n            {hasReleaseSwitch && <Button variant=\"outline-secondary\" disabled={running} onClick={release_switch}>Release Switch</Button>}\r\n            {hasSearchSwitch && <Button variant=\"outline-secondary\" disabled={running} onClick={search_switch}>Search Switch</Button>}\r\n            {hasGoToSwitchLatchPosition && <Button variant=\"outline-secondary\" disabled={running} onClick={go_to_switch_latch_position}>Go To Switch Latch Position</Button>}\r\n            {hasSearchEncoderNSignal && <Button variant=\"outline-secondary\" disabled={running} onClick={search_encoder_n_signal}>Search Encoder N Signal</Button>}\r\n            {hasGoToEncoderNSignal && <Button variant=\"outline-secondary\" disabled={running} onClick={go_to_encoder_n_signal}>Go To Encoder N Signal</Button>}\r\n            {hasGoToChamberOffsetPosition && <Button variant=\"outline-secondary\" disabled={running} onClick={go_to_chamber_offset_position}>Go To Chamber Offset Position</Button>}\r\n            {hasSetHomePosition && <Button variant=\"outline-secondary\" disabled={running} onClick={set_home_position}>Set Home Position</Button>}\r\n            {hasShiftFromHome && <Button variant=\"outline-secondary\" disabled={running} onClick={shift_from_home}>Shift From Home</Button>}\r\n            {hasFinishHome && <Button variant=\"outline-secondary\" disabled={running} onClick={finish_home}>Finish Home</Button>}\r\n            <Button variant=\"secondary\" onClick={stop}>Stop</Button>\r\n            {hasSaveChamberOffsetPosition && <Button variant=\"outline-secondary\" disabled={running} onClick={confirmSaveChamberOffsetPosition}>Save Chamber Offset Position</Button>}\r\n            {hasSaveSyringeBottomPosition && <Button variant=\"outline-secondary\" disabled={running} onClick={confirmSaveSyringeBottomPosition}>Save Syringe Bottom Position</Button>}\r\n            <ConfirmModal show={show} handleClose={handleClose} handleConfirm={handleConfirm} message={confirmMessage} />\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default StepperHome;\r\n","import React from 'react';\r\nimport { usePost } from '../../API';\r\nimport { Button } from 'react-bootstrap';\r\nimport Card from '../Card'\r\n\r\nconst StepperJog = ({running, actuator, unit}) => {\r\n    const post = usePost();\r\n\r\n    const stop = event => {\r\n        console.log('stop');\r\n        post('stop')\r\n    }\r\n    const jogP = (event) => {\r\n        post(`${actuator} jog + 1`);\r\n    }\r\n    const jogPP = (event) => {\r\n        post(`${actuator} jog + 5`);\r\n    }\r\n    const jogPPP = (event) => {\r\n        post(`${actuator} jog + 10`);\r\n    }\r\n    const jogN = (event) => {\r\n        post(`${actuator} jog - 1`);\r\n    }\r\n    const jogNN = (event) => {\r\n        post(`${actuator} jog - 5`);\r\n    }\r\n    const jogNNN = (event) => {\r\n        post(`${actuator} jog - 10`);\r\n    }\r\n    let p_str = '+1'\r\n    let pp_str = '+5'\r\n    let ppp_str = '+10'\r\n    let n_str = '-1'\r\n    let nn_str = '-5'\r\n    let nnn_str = '-10'\r\n    if (actuator === 'syringe') {\r\n      p_str = 'down 1'\r\n      pp_str = 'down 5'\r\n      ppp_str = 'down 10'\r\n      n_str = 'up 1'\r\n      nn_str = 'up 5'\r\n      nnn_str = 'up 10'\r\n    }\r\n\r\n    return(\r\n        <Card title=\"Jog\">\r\n            <Button variant=\"outline-secondary\" disabled={running} onClick={jogP}>{p_str} {unit}</Button>\r\n            <Button variant=\"outline-secondary\" disabled={running} onClick={jogPP}>{pp_str} {unit}</Button>\r\n            <Button variant=\"outline-secondary\" disabled={running} onClick={jogPPP}>{ppp_str} {unit}</Button>\r\n            <Button variant=\"outline-secondary\" disabled={running} onClick={jogN}>{n_str} {unit}</Button>\r\n            <Button variant=\"outline-secondary\" disabled={running} onClick={jogNN}>{nn_str} {unit}</Button>\r\n            <Button variant=\"outline-secondary\" disabled={running} onClick={jogNNN}>{nnn_str} {unit}</Button>\r\n            <Button variant=\"secondary\" onClick={stop}>Stop</Button>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default StepperJog;\r\n","import React, {useState} from 'react';\nimport { usePost } from '../../API';\nimport { Button, InputGroup, FormControl } from 'react-bootstrap';\nimport Card from '../Card'\n\n\n\nconst StepperPosition = ({running, actuator, unit}) => {\n    const [position_input, setPositionInput] = useState('');\n\n    const post = usePost();\n    const stop = event => {\n        console.log('stop');\n        post('stop')\n    }\n    const position = (event) => {\n        post(`${actuator} position ${position_input}`);\n    }\n\n    return(\n        <Card title=\"Position\">\n            <InputGroup>\n                <FormControl \n                    placeholder=\"position\" \n                    as=\"input\" \n                    value={position_input} \n                    onChange={event => setPositionInput(event.target.value)}\n                >\n                </FormControl>\n                <Button variant=\"outline-secondary\" disabled={running} onClick={position}>Go [{unit}]</Button>\n                <Button variant=\"secondary\" onClick={stop}>Stop</Button>\n            </InputGroup>\n        </Card>\n    );\n}\n\nexport default StepperPosition;\n\n\n","import React, { useState } from 'react';\r\nimport { usePost } from '../../API';\r\nimport { Row, Col, Button } from 'react-bootstrap';\r\nimport Card from '../Card'\r\n\r\nfunction createData(value, writable, hexDisplay) {\r\n    return { value, writable, hexDisplay, input:'' };\r\n}\r\nconst registers_info = {\r\n  'gconf': createData(0, true, true),\r\n  'gstat': createData(0, false, true),\r\n  'ifcnt': createData(0, false, true),\r\n  'slaveconf': createData(0, true, false),\r\n  'ioin': createData(0, false, true),\r\n  'x_comapre': createData(0, true, false),\r\n  'ihold_irun': createData(0, true, false),\r\n  'tpowerdown': createData(0, true, false),\r\n  'tstep': createData(0, false, true),\r\n  'tpwmthrs': createData(0, true, false),\r\n  'tcoolthrrs': createData(0, true, false),\r\n  'thigh': createData(0, true, false),\r\n  'rampmode': createData(0, true, true),\r\n  'xactual': createData(0, true, true),\r\n  'vactual': createData(0, true, false),\r\n  'vstart': createData(0, true, false),\r\n  'a1': createData(0, true, false),\r\n  'v1': createData(0, true, false),\r\n  'amax': createData(0, true, false),\r\n  'vmax': createData(0, true, false),\r\n  'dmax': createData(0, true, false),\r\n  'vstop': createData(0, true, false),\r\n  'tzerowait': createData(0, true, true),\r\n  'xtarget': createData(0, true, false),\r\n  'vdcmin': createData(0, true, false),\r\n  'sw_mode': createData(0, true, true),\r\n  'ramp_stat': createData(0, false, true),\r\n  'xlatch': createData(0, false, false),\r\n  'encmode': createData(0, true, true),\r\n  'x_enc': createData(0, true, false),\r\n  'enc_const': createData(0, true, false),\r\n  'enc_status': createData(0, false, true),\r\n  'enc_latch': createData(0, false, false),\r\n  'mslut0': createData(0, false, false),\r\n  'mslut1': createData(0, false, false),\r\n  'mslut2': createData(0, false, false),\r\n  'mslut3': createData(0, false, false),\r\n  'mslut4': createData(0, false, false),\r\n  'mslut5': createData(0, false, false),\r\n  'mslut6': createData(0, false, false),\r\n  'mslut7': createData(0, false, false),\r\n  'mslutsel': createData(0, false, false),\r\n  'mslutstart': createData(0, false, false),\r\n  'mscnt': createData(0, false, true),\r\n  'mscuract': createData(0, false, true),\r\n  'chopconf': createData(0, true, false),\r\n  'coolconf': createData(0, true, false),\r\n  'dcctrl': createData(0, true, false),\r\n  'drvstatus': createData(0, false, true),\r\n  'pwmconf': createData(0, true, false),\r\n  'pwm_scale': createData(0, false, true),\r\n  'encm_ctrl': createData(0, true, false),\r\n  'lost_steps': createData(0, false, true),\r\n}\r\n\r\nconst Register = ({ name, info, running, actuator }) => {\r\n    const [input, setInput] = useState('');\r\n    const onInputChange = (event) => {setInput(event.target.value);};\r\n\r\n    const post = usePost();\r\n    const write = event => {\r\n        // post(`set_register syringe ${name} ${input}`);\r\n        post(`set_register ${actuator} ${name} ${input}`);\r\n    }\r\n\r\n    return(\r\n        <Row>\r\n            <Col xs='3' md='3'>{name}</Col>\r\n            <Col align='right' xs='3' md='3'>\r\n                {info.hexDisplay ? `0x${info.value.toString(16)}` : `${info.value}`}\r\n            </Col>\r\n            <Col\r\n                as='input' xs='3' md='3' value={input} disabled={!info.writable}\r\n                onChange={onInputChange}\r\n            >\r\n            </Col>\r\n            <Col xs='2' md='2'>\r\n                <Button variant=\"outline-secondary\" disabled={running || !info.writable} onClick={write}>write</Button>\r\n            </Col>\r\n    </Row>\r\n);\r\n}\r\n\r\nconst Registers = ({actuator, running, registers}) => {\r\n    Object.entries(registers).forEach(([key, value]) => {\r\n        if (key in registers_info) {\r\n          registers_info[key].value = value\r\n        }\r\n    });\r\n\r\n    return(\r\n        <Card title=\"Registers\">\r\n            <Row xs='1' md='2'>\r\n                {Object.entries(registers_info).map(([key, value]) => (\r\n                <Col key={key} >\r\n                    <Register name={key} info={value} running={running} actuator={actuator}>\r\n                    </Register>\r\n                </Col>\r\n                ))}\r\n            </Row>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Registers;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { usePost } from '../API';\r\nimport StepperState from '../components/stepper/StepperState';\r\nimport StepperHome from '../components/stepper/StepperHome';\r\nimport StepperJog from '../components/stepper/StepperJog';\r\nimport StepperPosition from '../components/stepper/StepperPosition';\r\nimport Registers from '../components/stepper/Registers';\r\nimport Card from '../components/Card';\r\nimport {Button} from 'react-bootstrap';\r\n\r\n\r\nconst Goto = ({running}) => {\r\n  const post = usePost();\r\n\r\n  const stop = event => {\r\n      console.log('stop');\r\n      post('stop')\r\n  }\r\n  const goto_1 = (event) => {\r\n      post(`chamber goto 1`);\r\n  }\r\n  const goto_2 = (event) => {\r\n    post(`chamber goto 2`);\r\n  }\r\n  const goto_3 = (event) => {\r\n    post(`chamber goto 3`);\r\n  }\r\n  const goto_4 = (event) => {\r\n    post(`chamber goto 4`);\r\n  }\r\n  const goto_5 = (event) => {\r\n    post(`chamber goto 5`);\r\n  }\r\n  const goto_6 = (event) => {\r\n    post(`chamber goto 6`);\r\n  }\r\n  const goto_7 = (event) => {\r\n    post(`chamber goto 7`);\r\n  }\r\n  const goto_8 = (event) => {\r\n    post(`chamber goto 8`);\r\n  }\r\n  const goto_9 = (event) => {\r\n    post(`chamber goto 9`);\r\n  }\r\n  const goto_10 = (event) => {\r\n    post(`chamber goto 10`);\r\n  }\r\n  const goto_11 = (event) => {\r\n    post(`chamber goto 11`);\r\n  }\r\n  const goto_12 = (event) => {\r\n    post(`chamber goto 12`);\r\n  }\r\n  const goto_13 = (event) => {\r\n    post(`chamber goto 13`);\r\n  }\r\n  return(\r\n      <Card title=\"Goto\">\r\n          <Button variant=\"outline-secondary\" disabled={running} onClick={goto_1}>1</Button>\r\n          <Button variant=\"outline-secondary\" disabled={running} onClick={goto_2}>2</Button>\r\n          <Button variant=\"outline-secondary\" disabled={running} onClick={goto_3}>3</Button>\r\n          <Button variant=\"outline-secondary\" disabled={running} onClick={goto_4}>4</Button>\r\n          <Button variant=\"outline-secondary\" disabled={running} onClick={goto_5}>5</Button>\r\n          <Button variant=\"outline-secondary\" disabled={running} onClick={goto_6}>6</Button>\r\n          <Button variant=\"outline-secondary\" disabled={running} onClick={goto_7}>7</Button>\r\n          <Button variant=\"outline-secondary\" disabled={running} onClick={goto_8}>8</Button>\r\n          <Button variant=\"outline-secondary\" disabled={running} onClick={goto_9}>9</Button>\r\n          <Button variant=\"outline-secondary\" disabled={running} onClick={goto_10}>10</Button>\r\n          <Button variant=\"outline-secondary\" disabled={running} onClick={goto_11}>11</Button>\r\n          <Button variant=\"outline-secondary\" disabled={running} onClick={goto_12}>12</Button>\r\n          <Button variant=\"outline-secondary\" disabled={running} onClick={goto_13}>13</Button>\r\n          <Button variant=\"secondary\" onClick={stop}>Stop</Button>\r\n      </Card>\r\n  );\r\n}\r\n\r\nconst Chamber = () => {\r\n    const [driver_position, setDriverPosition] = useState(0.0);\r\n    const [encoder_position, setEncoderPosition] = useState(0.0);\r\n    const [velocity, setVelocity] = useState(0.0);\r\n    const [running, setRunning] = useState(false);\r\n    const [status, setStatus] = useState(0)\r\n    const [switch_mode, setSwitchMode] = useState(0)\r\n    const [encoder_mode, setEncoderMode] = useState(0)\r\n    const [registers, setRegisters] = useState({});\r\n\r\n    const post = usePost();\r\n    const updateStatus = () => {\r\n        post('get_chamber_status', (data) => {\r\n            // console.log(data);\r\n            setDriverPosition(data.driver_position);\r\n            setEncoderPosition(data.encoder_position);\r\n            setVelocity(data.velocity);\r\n            setRunning(data.running);\r\n            // setStatusRegister(data.registers.status)\r\n            setStatus(data.registers.ramp_stat)\r\n            setSwitchMode(data.registers.sw_mode)\r\n            setEncoderMode(data.registers.encmode)\r\n            setRegisters(data.registers)\r\n        } )\r\n    };\r\n    // state life cycle function\r\n    useEffect(() => {\r\n        // component did mount\r\n        const statusTimer = setInterval(updateStatus, 500); // set update timer (interval : 0.5s)\r\n        // component will unmount\r\n        return () => {\r\n            clearInterval(statusTimer);  // clear update timer\r\n        };\r\n    }, []);\r\n    \r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-center\">\r\n                <Col md='6'>\r\n                    <StepperState \r\n                        running={running} driver_position={driver_position} encoder_position={encoder_position}\r\n                        velocity={velocity}\r\n                        status={status}\r\n                        switch_mode={switch_mode}\r\n                        encoder_mode={encoder_mode}\r\n                    />\r\n                </Col>\r\n                <Col md='6'>\r\n                    <StepperHome running={running}\r\n                        actuator=\"chamber\"\r\n                        hasHome \r\n                        hasSearchEncoderNSignal hasGoToEncoderNSignal hasGoToChamberOffsetPosition\r\n                        hasSetHomePosition hasShiftFromHome hasFinishHome hasSaveChamberOffsetPosition\r\n                    />\r\n                </Col>\r\n                <Col md='6'>\r\n                    <StepperJog running={running} actuator=\"chamber\" unit=\"deg\"/>\r\n                </Col>\r\n                <Col md='6'>\r\n                    <Goto running={running}/>\r\n                </Col>\r\n                <Col md='6'>\r\n                    <StepperPosition running={running} actuator=\"chamber\" unit=\"deg\"/>\r\n                </Col>\r\n            </Row>\r\n            <Row >\r\n                <Col xs='12' md='12'>\r\n                    <Registers actuator=\"chamber\" running={running} registers={registers}/>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Chamber;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { usePost } from '../API';\r\nimport StepperState from '../components/stepper/StepperState';\r\nimport StepperHome from '../components/stepper/StepperHome';\r\nimport StepperJog from '../components/stepper/StepperJog';\r\nimport StepperPosition from '../components/stepper/StepperPosition';\r\nimport Registers from '../components/stepper/Registers';\r\nimport Card from '../components/Card';\r\nimport {Button} from 'react-bootstrap';\r\nimport { InputGroup } from 'react-bootstrap';\r\nimport { FormControl } from 'react-bootstrap';\r\n\r\nconst Volume = ({running}) => {\r\n  const [volume_input, setVolumeInput] = useState('');\r\n  const post = usePost();\r\n  const stop = event => {\r\n      console.log('stop');\r\n      post('stop')\r\n  }\r\n  const volume = (event) => {\r\n      post(`syringe volume ${volume_input}`);\r\n  }\r\n\r\n  return(\r\n      <Card title=\"volume\">\r\n          <InputGroup>\r\n              <FormControl \r\n                  placeholder=\"volume\" \r\n                  as=\"input\" \r\n                  value={volume_input} \r\n                  onChange={event => setVolumeInput(event.target.value)}\r\n              >\r\n              </FormControl>\r\n              <Button variant=\"outline-secondary\" disabled={running} onClick={volume}>Go [uL]</Button>\r\n              <Button variant=\"secondary\" onClick={stop}>Stop</Button>\r\n          </InputGroup>\r\n      </Card>\r\n  );\r\n}\r\n\r\n\r\nconst Syringe = () => {\r\n    const [driver_position, setDriverPosition] = useState(0.0);\r\n    const [encoder_position, setEncoderPosition] = useState(0.0);\r\n    const [velocity, setVelocity] = useState(0.0);\r\n    const [running, setRunning] = useState(false);\r\n    const [status, setStatus] = useState(0)\r\n    const [switch_mode, setSwitchMode] = useState(0)\r\n    const [registers, setRegisters] = useState({});\r\n\r\n    const post = usePost();\r\n    const updateStatus = () => {\r\n        post('get_syringe_status', (data) => {\r\n            setDriverPosition(data.driver_position);\r\n            setEncoderPosition(data.encoder_position);\r\n            setVelocity(data.velocity);\r\n            setRunning(data.running);\r\n            // setStatusRegister(data.registers.status)\r\n            setStatus(data.registers.ramp_stat)\r\n            setSwitchMode(data.registers.sw_mode)\r\n            setRegisters(data.registers)\r\n        } )\r\n    };\r\n    // state life cycle function\r\n    useEffect(() => {\r\n        // component did mount\r\n        const statusTimer = setInterval(updateStatus, 500); // set update timer (interval : 0.5s)\r\n        // component will unmount\r\n        return () => {\r\n            clearInterval(statusTimer);  // clear update timer\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-center\">\r\n                <Col md='6'>\r\n                    <StepperState \r\n                        running={running} driver_position={driver_position} encoder_position={encoder_position}\r\n                        velocity={velocity} status={status} switch_mode={switch_mode}\r\n                    />\r\n                </Col>\r\n                <Col md='6'>\r\n                    <StepperHome running={running}\r\n                        actuator=\"syringe\"\r\n                        hasHome \r\n                        hasReleaseSwitch hasSearchSwitch hasGoToSwitchLatchPosition\r\n                        hasSearchEncoderNSignal hasGoToEncoderNSignal\r\n                        hasSetHomePosition hasShiftFromHome hasFinishHome\r\n                        hasSaveSyringeBottomPosition\r\n                    />\r\n                </Col>\r\n                <Col md='6'>\r\n                    <StepperJog running={running} actuator=\"syringe\" unit=\"mm\"/>\r\n                </Col>\r\n                <Col md='6'>\r\n                    <StepperPosition running={running} actuator=\"syringe\" unit=\"mm\"/>\r\n                </Col>\r\n                <Col md='6'>\r\n                    <Volume running={running}/>\r\n                </Col>\r\n            </Row>\r\n            <Row >\r\n                <Col xs='12' md='12'>\r\n                    <Registers actuator=\"syringe\" running={running} registers={registers}/>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Syringe;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { usePost } from '../API';\r\nimport StepperState from '../components/stepper/StepperState';\r\nimport StepperHome from '../components/stepper/StepperHome';\r\nimport StepperJog from '../components/stepper/StepperJog';\r\nimport StepperPosition from '../components/stepper/StepperPosition';\r\nimport Registers from '../components/stepper/Registers';\r\n\r\nconst Filter = () => {\r\n    const [driver_position, setDriverPosition] = useState(0.0);\r\n    const [encoder_position, setEncoderPosition] = useState(0.0);\r\n    const [velocity, setVelocity] = useState(0.0);\r\n    const [running, setRunning] = useState(false);\r\n    const [status, setStatus] = useState(0)\r\n    const [switch_mode, setSwitchMode] = useState(0)\r\n    const [registers, setRegisters] = useState({});\r\n\r\n    const post = usePost();\r\n    const updateStatus = () => {\r\n        post('get_filter_status', (data) => {\r\n            setDriverPosition(data.driver_position);\r\n            setEncoderPosition(data.encoder_position);\r\n            setVelocity(data.velocity);\r\n            setRunning(data.running);\r\n            // setStatusRegister(data.registers.status)\r\n            setStatus(data.registers.ramp_stat)\r\n            setSwitchMode(data.registers.sw_mode)\r\n            setRegisters(data.registers)\r\n            // console.log(data);\r\n        } )\r\n    };\r\n    // state life cycle function\r\n    useEffect(() => {\r\n        // component did mount\r\n        const statusTimer = setInterval(updateStatus, 500); // set update timer (interval : 0.5s)\r\n        // component will unmount\r\n        return () => {\r\n            clearInterval(statusTimer);  // clear update timer\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-center\">\r\n                <Col md='6'>\r\n                    <StepperState \r\n                        running={running} driver_position={driver_position} encoder_position={encoder_position}\r\n                        velocity={velocity}\r\n                        status={status} switch_mode={switch_mode}\r\n                    />\r\n                </Col>\r\n                <Col md='6'>\r\n                    <StepperHome running={running}\r\n                        actuator=\"filter\"\r\n                        hasHome hasReleaseSwitch hasSearchSwitch hasGoToSwitchLatchPosition\r\n                        hasSetHomePosition hasShiftFromHome hasFinishHome\r\n                    />\r\n                </Col>\r\n                <Col md='6'>\r\n                    <StepperJog running={running} actuator=\"filter\" unit=\"deg\"/>\r\n                </Col>\r\n                <Col md='6'>\r\n                    <StepperPosition running={running} actuator=\"filter\" unit=\"deg\"/>\r\n                </Col>\r\n            </Row>\r\n            <Row >\r\n                <Col xs='12' md='12'>\r\n                    <Registers actuator=\"filter\" running={running} registers={registers}/>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Filter;","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Button, Badge } from 'react-bootstrap';\nimport Card from '../components/Card'\nimport { usePost } from '../API';\n\n\nconst Magnet = () => {\n    const [running, setRunning] = useState(false);\n\n    const post = usePost();\n    const stop = event => {\n        post('stop')\n    }\n    const magnetOn = (event) => {\n        post('magnet on');\n    }\n    const magnetOff = (event) => {\n        post('magnet off');\n    }\n    const magnetHome = (event) => {\n        post('magnet home');\n    }\n    const updateStatus = () => {\n        post('get_magnet_status', (data) => {\n            setRunning(data.running);\n        } )\n    };\n    // state life cycle function\n    useEffect(() => {\n        // component did mount\n        const statusTimer = setInterval(updateStatus, 500); // set update timer (interval : 0.5s)\n        // component will unmount\n        return () => {\n            clearInterval(statusTimer);  // clear update timer\n        };\n    }, []);\n\n    return (\n        <Container>\n            <Row className=\"justify-content-center\">\n                <Col md='6'>\n                    <Card title=\"Home\">\n                    {running && <Badge variant=\"info\" size=\"lg\">running</Badge>}\n                    {!running && <Badge variant=\"light\" size=\"lg\">ready</Badge>}\n                        <Button variant=\"outline-secondary\" disabled={running} onClick={magnetOn}>On</Button>\n                        <Button variant=\"outline-secondary\" disabled={running} onClick={magnetOff}>Off</Button>\n                        <Button variant=\"outline-secondary\" disabled={running} onClick={magnetHome}>Home</Button>\n                        <Button variant=\"secondary\" onClick={stop}>Stop</Button>\n                    </Card>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default Magnet;","import React from \"react\";\nimport { Nav } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap'\n\n\nconst Navigation = () => {\n    return (\n        <Nav variant=\"pills\" defaultActiveKey=\"/\" style={{marginBottom:\"10px\"}}>\n            <Nav.Item>\n                <LinkContainer to=\"/main\">\n                    <Nav.Link eventKey=\"/main\">Main</Nav.Link>\n                </LinkContainer>\n                    {/* <Nav.Link eventKey=\"/\" href=\"/\">Main</Nav.Link> */}\n            </Nav.Item>        \n            <Nav.Item>\n                <LinkContainer to=\"/protocol\">\n                    <Nav.Link eventKey=\"protocol\">Protocol</Nav.Link>\n                </LinkContainer>\n            </Nav.Item>        \n            <Nav.Item>\n                <LinkContainer to=\"/chamber\">\n                    <Nav.Link eventKey=\"chamber\">Chamber</Nav.Link>\n                </LinkContainer>\n            </Nav.Item>        \n            <Nav.Item>\n                <LinkContainer to=\"/syringe\">\n                    <Nav.Link eventKey=\"syringe\" href=\"/syringe\">Syringe</Nav.Link>\n                </LinkContainer>\n            </Nav.Item>\n            <Nav.Item>\n                <LinkContainer to=\"/filter\">\n                    <Nav.Link eventKey=\"filter\" href=\"/filter\">Filter</Nav.Link>\n                </LinkContainer>\n            </Nav.Item>\n            <Nav.Item>\n                <LinkContainer to=\"/magnet\">\n                    <Nav.Link eventKey=\"magnet\" href=\"/magnet\">Magnet</Nav.Link>\n                </LinkContainer>\n            </Nav.Item>\n        </Nav>\n)};\n\nexport default Navigation;\n","// Importing the React \nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Importing Pages\nimport Layout from './components/Layout';\nimport Main from './pages/Main';\nimport Setup from './pages/Setup';\nimport Editor from './pages/Editor';\nimport Protocol from './pages/Protocol'\nimport Chamber from './pages/Chamber'\nimport Syringe from './pages/Syringe'\nimport Filter from './pages/Filter'\nimport Magnet from './pages/Magnet'\nimport Navigation from './components/Navigation'\n\nReactDOM.render(\n  <Layout>\n    <BrowserRouter>\n      <Navigation />\n      <Switch>\n        <Route exact path=\"/\" component={Main} />\n        <Route path=\"/main\" component={Main} />\n        <Route exact path='/setup' component={Setup} />\n        <Route path='/editor/:name' component={Editor} />\n        <Route path=\"/protocol\" component={Protocol} />\n        <Route path=\"/chamber\" component={Chamber} />\n        <Route path=\"/syringe\" component={Syringe} />\n        <Route path=\"/filter\" component={Filter} />\n        <Route path=\"/magnet\" component={Magnet} />\n      </Switch>\n  </BrowserRouter>\n  </Layout>\n  , document.getElementById('root')\n);\n"],"sourceRoot":""}